steps:
  # Build the container image
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA",
        ".",
      ]

  # Push the container image to Container Registry
  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA"
      ]

  # Apply the latest migrations
  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.prod",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "migrate",
      ]

  # Create cache table
  - id: "create cache table"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.prod",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "createcachetable",
      ]

  # Collect static files
  - id: "collect static files"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA",
        "-s", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
        "-e", "DJANGO_SETTINGS_MODULE=config.settings.prod",
        "-e", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID",
        "-e", "SETTINGS_NAME=${_SETTINGS_NAME}",
        "--", "python", "/app/manage.py", "collectstatic", "--noinput"
      ]

  # Deploy an image from Container Registry to Cloud Run
  - id: "deploy to cloud run"
    name: "gcr.io/cloud-builders/gcloud"
    args: [
      "beta",
      "run",
      "deploy",
      "${_SERVICE_NAME}",
      "--image", "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA",
      "--region", "europe-west1",
      "--platform", "managed",
      "--allow-unauthenticated",
      "--add-cloudsql-instances", "${_CLOUDSQL_INSTANCE_CONNECTION_NAME}",
      "--set-env-vars", "GOOGLE_CLOUD_PROJECT=$PROJECT_ID,SETTINGS_NAME=${_SETTINGS_NAME},DJANGO_SETTINGS_MODULE=config.settings.prod",
      "--min-instances", "1",
      "--max-instances", "8",
      "--memory", "512M",
      "--cpu", "1",
      "--set-secrets", "/tmp/secrets/.env=${_SETTINGS_NAME}:latest",
      "--timeout", "59m59s"
  ]

images:
  - "europe-west1-docker.pkg.dev/$PROJECT_ID/fyj/cqi-server-${_DEPLOYMENT_TYPE}:$COMMIT_SHA"

timeout: 1200s
queueTtl: 3600s