# Generated by Django 3.2.25 on 2024-12-13 13:07

from django.db import migrations


def correct_biochemistry_data(apps, schema_editor):
    BiochemistryResult = apps.get_model('labpulse', 'BiochemistryResult')

    test_mapping = {
        'chol': 'Cholesterol',
        'Cre': 'Creatinine',
        'GPT': 'ALAT/GPT',
        'LDL': 'LDL-Cholesterol',
        'UreaUV': 'Urea'
    }

    def map_test_name(test):
        for key, value in test_mapping.items():
            if key.lower() in test.lower():
                return key, value
        return test, test

    # Correct 'Creaa' to 'Crea' and update full_name
    BiochemistryResult.objects.filter(test='Creaa').update(test='Crea', full_name='Creatinine')

    # Update other records
    for result in BiochemistryResult.objects.all():
        mapped_test, mapped_full_name = map_test_name(result.test)
        if result.test != mapped_test or result.full_name != mapped_full_name or result.full_name == 'nan':
            result.test = mapped_test
            result.full_name = mapped_full_name
            result.save()


def reverse_correct_biochemistry_data(apps, schema_editor):
    # If needed, write reverse migration logic here
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('labpulse', '0100_auto_20241213_1245'),
    ]

    operations = [
        migrations.RunPython(correct_biochemistry_data, reverse_correct_biochemistry_data),
    ]
