# Generated by Django 3.2.19 on 2023-08-30 18:41

import crum
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wash_dqa', '0017_auto_20230830_2135'),
    ]

    operations = [
        migrations.CreateModel(
            name='Counties',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'counties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SubCounties',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.counties')),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'sub-counties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TableNames',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('model_name', models.CharField(blank=True, max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sub_county', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
            ],
            options={
                'verbose_name_plural': 'wards',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('year', models.CharField(choices=[('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('2028', '2028'), ('2029', '2029'), ('2030', '2030'), ('2031', '2031'), ('2032', '2032'), ('2033', '2033'), ('2034', '2034'), ('2035', '2035'), ('2036', '2036'), ('2037', '2037'), ('2038', '2038'), ('2039', '2039'), ('2040', '2040'), ('2041', '2041'), ('2042', '2042'), ('2043', '2043'), ('2044', '2044'), ('2045', '2045'), ('2046', '2046'), ('2047', '2047'), ('2048', '2048'), ('2049', '2049'), ('2050', '2050'), ('2051', '2051'), ('2052', '2052'), ('2053', '2053'), ('2054', '2054'), ('2055', '2055'), ('2056', '2056'), ('2057', '2057'), ('2058', '2058'), ('2059', '2059'), ('2060', '2060'), ('2061', '2061'), ('2062', '2062'), ('2063', '2063'), ('2064', '2064'), ('2065', '2065'), ('2066', '2066'), ('2067', '2067'), ('2068', '2068'), ('2069', '2069'), ('2070', '2070'), ('2071', '2071'), ('2072', '2072'), ('2073', '2073'), ('2074', '2074'), ('2075', '2075'), ('2076', '2076'), ('2077', '2077'), ('2078', '2078'), ('2079', '2079'), ('2080', '2080'), ('2081', '2081'), ('2082', '2082'), ('2083', '2083'), ('2084', '2084'), ('2085', '2085'), ('2086', '2086'), ('2087', '2087'), ('2088', '2088'), ('2089', '2089'), ('2090', '2090'), ('2091', '2091'), ('2092', '2092'), ('2093', '2093'), ('2094', '2094'), ('2095', '2095'), ('2096', '2096'), ('2097', '2097'), ('2098', '2098')], max_length=4)),
                ('quarter', models.CharField(choices=[('Qtr1', 'Q1'), ('Qtr2', 'Q2'), ('Qtr3', 'Q3'), ('Qtr4', 'Q4')], max_length=4)),
                ('quarter_year', models.CharField(blank=True, max_length=10)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Periods',
                'ordering': ['quarter_year'],
            },
        ),
        migrations.CreateModel(
            name='Documentation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('auditor_note', models.CharField(blank=True, max_length=250, null=True)),
                ('dqa_date', models.DateField(blank=True, null=True)),
                ('verification_means', models.TextField()),
                ('staff_involved', models.TextField()),
                ('dropdown_option', models.CharField(blank=True, choices=[('Fully meets all requirements', 'Fully meets all requirements'), ('Almost meets all requirements', 'Almost meets all requirements'), ('Partially meets all requirements', 'Partially meets all requirements'), ('Approaches basic requirements', 'Approaches basic requirements'), ('Does not meet requirements', 'Does not meet requirements'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('calculations', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'verbose_name_plural': 'Documentation',
                'ordering': ['ward_name'],
                'unique_together': {('quarter_year', 'description', 'ward_name')},
            },
        ),
        migrations.CreateModel(
            name='DataQualitySystems',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('auditor_note', models.CharField(blank=True, max_length=250, null=True)),
                ('dqa_date', models.DateField(blank=True, null=True)),
                ('verification_means', models.TextField()),
                ('staff_involved', models.TextField()),
                ('dropdown_option', models.CharField(blank=True, choices=[('Fully meets all requirements', 'Fully meets all requirements'), ('Almost meets all requirements', 'Almost meets all requirements'), ('Partially meets all requirements', 'Partially meets all requirements'), ('Approaches basic requirements', 'Approaches basic requirements'), ('Does not meet requirements', 'Does not meet requirements'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('calculations', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'verbose_name_plural': 'Data Quality Systems',
                'ordering': ['ward_name'],
                'unique_together': {('quarter_year', 'description', 'ward_name')},
            },
        ),
        migrations.CreateModel(
            name='DataQualityAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('auditor_note', models.CharField(blank=True, max_length=250, null=True)),
                ('dqa_date', models.DateField(blank=True, null=True)),
                ('number_trained', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_access_basic_water', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_access_safe_water', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_community_open_defecation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_access_basic_sanitation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_access_safe_sanitation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_access_basic_sanitation_institutions', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('number_trained_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_access_basic_water_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_access_safe_water_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_community_open_defecation_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_access_basic_sanitation_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_access_safe_sanitation_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('number_access_basic_sanitation_institutions_numeric', models.PositiveIntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'verbose_name_plural': 'Data Quality Assessment',
                'ordering': ['ward_name', 'date_created'],
                'unique_together': {('quarter_year', 'description', 'ward_name')},
            },
        ),
        migrations.CreateModel(
            name='DataConcordance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('indicator', models.CharField(choices=[('', 'Select indicator'), ('HL.8.1-1: Number of people gaining access to basic drinking water services as a result of USG assistance', 'HL.8.1-1: Number of people gaining access to basic drinking water services as a result of USG assistance'), ('HL.8.1-2: Number of people gaining access to a safely managed drinking water service', 'HL.8.1-2: Number of people gaining access to a safely managed drinking water service'), ('HL.8.2-1: Number of communities certified as open defecation free (ODF) as a result of USG assistance', 'HL.8.2-1: Number of communities certified as open defecation free (ODF) as a result of USG assistance'), ('HL.8.2-2: Number of people gaining access to a basic sanitation service as a result of USG assistance', 'HL.8.2-2: Number of people gaining access to a basic sanitation service as a result of USG assistance'), ('HL.8.2-3: Number of people gaining access to safely managed sanitation services as a result of USG assistance.', 'HL.8.2-3: Number of people gaining access to safely managed sanitation services as a result of USG assistance.'), ('HL.8.2-4: Number of basic sanitation facilities provided in institutional settings as a result of USG assistance', 'HL.8.2-4: Number of basic sanitation facilities provided in institutional settings as a result of USG assistance'), ('HL.CUST MCH 12.0: Number of individuals trained to implement improved sanitation methods', 'HL.CUST MCH 12.0: Number of individuals trained to implement improved sanitation methods')], max_length=250)),
                ('field_1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_2', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_3', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('total_source', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_5', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_6', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_7', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('total_monthly_report', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'unique_together': {('quarter_year', 'indicator', 'ward_name')},
            },
        ),
        migrations.CreateModel(
            name='DataCollectionReportingManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('description', models.TextField()),
                ('auditor_note', models.CharField(blank=True, max_length=250, null=True)),
                ('dqa_date', models.DateField(blank=True, null=True)),
                ('verification_means', models.TextField()),
                ('staff_involved', models.TextField()),
                ('dropdown_option', models.CharField(blank=True, choices=[('Fully meets all requirements', 'Fully meets all requirements'), ('Almost meets all requirements', 'Almost meets all requirements'), ('Partially meets all requirements', 'Partially meets all requirements'), ('Approaches basic requirements', 'Approaches basic requirements'), ('Does not meet requirements', 'Does not meet requirements'), ('N/A', 'N/A')], max_length=50, null=True)),
                ('calculations', models.FloatField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'verbose_name_plural': 'Data Collection, Reporting and Management',
                'ordering': ['ward_name'],
                'unique_together': {('quarter_year', 'description', 'ward_name')},
            },
        ),
    ]
