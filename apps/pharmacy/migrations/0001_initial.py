# Generated by Django 3.2.19 on 2023-05-16 12:13

import crum
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dqa', '0013_auto_20230420_1439'),
        ('cqi', '0003_auto_20230426_1152'),
    ]

    operations = [
        migrations.CreateModel(
            name='PharmacyRecords',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('indicator', models.CharField(choices=[('malaria_dar', 'Is there a Malaria Commodities DAR (MoH 645) in this facility?'), ('malaria__other_registers', 'If no, what register is used to capture dispensing of Malaria commodities?'), ('malaria_dar_in_use', 'If Yes, is the Malaria Commodity DAR (MoH 645) currently in use?'), ('malaria_cdrr_report', 'Check whether the facility has a copy of the Malaria Consumption Data Report and Requisition (CDRR) (MOH743) that was prepared in the last month of the review period?'), ('date_malaria_cdrr_submitted', 'If "Yes", when was the Malaria CDRR for the last month of the review period submitted? (DD/MM/YY)'), ('arv_register_adt', 'Is there a MANUAL ARV Daily Activity Register (DAR) (MOH 367A) or an electronic dispensing tool (WebADT) in this facility? Specify which one in the comments section.'), ('arv_f_cdrr', 'Does the facility have a copy of the ARV F-CDRR (MOH 730B) that was prepared for the last month of the review period?'), ('date_arv_f_cdrr_submitted', 'If "Yes", when was the ARV F-CDRR (MOH 730B) for the last month of the review period submitted? (DD/MM/YY)'), ('arv_f_maps', 'Does the facility have a copy of the ARV F-MAPS (MOH 729B) that was prepared for the last month of the review period?'), ('date_arv_f_maps_submitted', 'If "Yes", when was the ARV F-MAPS (MOH 729B) for the last month of the review period submitted?'), ('anti_tb_register', 'Is there a DADR-Anti TB register in this facility?'), ('anti_tb_register_in_use', 'If "Yes", is the DADR-Anti TB register currently in use?'), ('anti_tb_f_cdrr', 'Does the facility have a copy of the Anti TB F-CDRR that was prepared for the last month of the review period?'), ('date_anti_tb_f_cdr_submitted', 'If "Yes", when was the Anti TB F-CDRR for the last month of the review period submitted? (DD/MM/YY)'), ('fp_register', 'Is there a Family Planning Commodities Daily Activity Register (DAR) (MOH 512) in this facility?'), ('fp_register_in_use', 'If "Yes", is the Family Planning Commodities DAR (MOH 512 or other) currently in use?'), ('fp_f_cdrr', 'Does the facility have a copy of the Family Planning Commodity Report (F-CDRR MOH 747A) that was prepared and submitted for the last month of the review period?'), ('date_fp_f_cdrr_submitted', 'If "Yes", when was the FP CDRR for the last month of the review period submitted? (DD/MM/YY)'), ('art_delivery_notes', 'Is there a file maintained with delivery notes arranged chronologically from MEDS/KEMSA for ART, separate from a file with S11s?')], max_length=250)),
                ('is_yes', models.NullBooleanField()),
                ('date_report_submitted', models.DateField()),
                ('comments', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('facility_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cqi.facilities')),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dqa.period')),
            ],
        ),
    ]
