# Generated by Django 3.2.19 on 2023-08-30 17:03

import crum
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wash_dqa', '0010_auto_20230828_0945'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='dataqualityassessment',
            options={'ordering': ['ward_name', 'date_created'], 'verbose_name_plural': 'Data Quality Assessment'},
        ),
        migrations.RemoveField(
            model_name='datacollectionreportingmanagement',
            name='model_name',
        ),
        migrations.RemoveField(
            model_name='dataqualityassessment',
            name='model_name',
        ),
        migrations.RemoveField(
            model_name='dataqualitysystems',
            name='model_name',
        ),
        migrations.RemoveField(
            model_name='documentation',
            name='model_name',
        ),
        migrations.CreateModel(
            name='DataConcordance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('indicator', models.CharField(choices=[('', 'Select indicator'), ('HL.8.1-1: Number of people gaining access to basic drinking water services as a result of USG assistance', 'HL.8.1-1: Number of people gaining access to basic drinking water services as a result of USG assistance'), ('HL.8.1-2: Number of people gaining access to a safely managed drinking water service', 'HL.8.1-2: Number of people gaining access to a safely managed drinking water service'), ('HL.8.2-1: Number of communities certified as open defecation free (ODF) as a result of USG assistance', 'HL.8.2-1: Number of communities certified as open defecation free (ODF) as a result of USG assistance'), ('HL.8.2-2: Number of people gaining access to a basic sanitation service as a result of USG assistance', 'HL.8.2-2: Number of people gaining access to a basic sanitation service as a result of USG assistance'), ('HL.8.2-3: Number of people gaining access to safely managed sanitation services as a result of USG assistance.', 'HL.8.2-3: Number of people gaining access to safely managed sanitation services as a result of USG assistance.'), ('HL.8.2-4: Number of basic sanitation facilities provided in institutional settings as a result of USG assistance', 'HL.8.2-4: Number of basic sanitation facilities provided in institutional settings as a result of USG assistance'), ('HL.CUST MCH 12.0: Number of individuals trained to implement improved sanitation methods', 'HL.CUST MCH 12.0: Number of individuals trained to implement improved sanitation methods')], max_length=250)),
                ('field_1', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_2', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_3', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('total_source', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_5', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_6', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('field_7', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('total_monthly_report', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator('^\\d+$')])),
                ('created_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, default=crum.get_current_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quarter_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.period')),
                ('sub_county_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.subcounties')),
                ('ward_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wash_dqa.ward')),
            ],
            options={
                'unique_together': {('quarter_year', 'indicator', 'ward_name')},
            },
        ),
    ]
